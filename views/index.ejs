<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>File Manager</title>
    <link rel="stylesheet" href="/public/style.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </head>
  <body>
    <h1>File Manager</h1>
    <h2 style="margin-top: 2.5px !important; font-size: medium;"><%= currentDir %></h2>
    <div class="table-container">
      <table>
        <thead>
          <tr>
            <th style="width: 70%">File Name</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% if (currentDir && currentDir !== "/") { %>
            <%
              let path = currentDir;
              let parts = path.startsWith("/") ? path.slice(1).split('/') : path.split("/");
              parts.pop();
              let result = parts.join('/');
            %>
            <tr>
              <td>
                <a href="/?dir=<%= result %>">
                  <i class="fa-solid fa-turn-up"></i> <%= result %> (Go back one directory)
                </a>
              </td>
              <td>No actions available</td>
            </tr>
          <% } %>
          <% files.forEach(file => { %>
            <tr>
              <td>
                <% if (file.isDirectory) { %>
                  <a href="/?dir=<%= currentDir ? currentDir + '/' + file.name : file.name %>">
                    <i class="fas fa-folder"></i> <%= file.name %>
                  </a>
                <% } else { %>
                  <a href="/edit/<%= currentDir ? currentDir + '/' + file.name : file.name %>">
                    <i class="fas fa-file"></i> <%= file.name %>
                  </a>
                <% } %>
              </td>
              <td>
                <% if (!file.isDirectory) { %>
                  <a href="/edit/<%= currentDir ? currentDir + '/' + file.name : file.name %>" title="Edit">
                    <i class="fas fa-edit"></i>
                  </a>
                  |
                  <a href="/download/<%= currentDir ? currentDir + '/' + file.name : file.name %>" title="Download">
                    <i class="fas fa-download"></i>
                  </a>
                  |
                <% } %>
                <a href="/delete/<%= currentDir ? currentDir + '/' + file.name : file.name %>" style="color: red" title="Delete">
                  <i class="fas fa-trash-alt"></i>
                </a>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>

    <div class="container">
      <div class="card" style="display: flex; gap: 2px; height: 37px; text-align: center; justify-content: center; justify-self: center; justify-items: center;">
        <form id="uploadForm" action="/upload" method="post" enctype="multipart/form-data" class="drop_box">
          <input type="file" name="file" id="fileID" hidden />
          <button type="button" class="btn">
            <i class="fas fa-upload"></i> Upload File
          </button>
        </form>
        <button type="button" class="btn" id="create-dir-btn">
          <i class="fas fa-folder"></i> Create Directory
        </button>
        <button type="button" class="btn" id="create-file-btn">
          <i class="fas fa-file"></i> Create File
        </button>
      </div>
    </div>

    <script>
      document.getElementById("create-file-btn").addEventListener("click", function () {
        Swal.fire({
          title: "File Name",
          input: "text",
          inputLabel: "Enter the file name",
          inputPlaceholder: "File name",
          showCancelButton: true,
          confirmButtonText: "Create",
          cancelButtonText: "Cancel",
          inputValidator: (value) => {
            if (!value) {
              return "File name is required!";
            }
          },
        }).then((result) => {
          if (result.isConfirmed) {
            const file = result.value;

            fetch("/create-file", {
              method: "POST",
              body: new URLSearchParams({
                fileName: file,
                subdir: `<%= currentDir %>`,
              }),
            })
              .then((response) => {
                if (response.ok) {
                  Swal.fire({
                    title: "Success!",
                    text: `File "${file}" created successfully!`,
                    icon: "success",
                    confirmButtonText: "OK",
                  }).then(() => window.location.reload());
                } else {
                  Swal.fire({
                    title: "Error!",
                    text: "An error occurred while creating the file.",
                    icon: "error",
                    confirmButtonText: "OK",
                  });
                }
              })
              .catch((error) => {
                Swal.fire({
                  title: "Error!",
                  text: "An error occurred during the request.",
                  icon: "error",
                  confirmButtonText: "OK",
                });
              });
          }
        });
      });

      document.getElementById("create-dir-btn").addEventListener("click", function () {
        Swal.fire({
          title: "Directory Name",
          input: "text",
          inputLabel: "Enter the directory name",
          inputPlaceholder: "Directory name",
          showCancelButton: true,
          confirmButtonText: "Create",
          cancelButtonText: "Cancel",
          inputValidator: (value) => {
            if (!value) {
              return "Directory name is required!";
            }
          },
        }).then((result) => {
          if (result.isConfirmed) {
            const dirName = result.value;

            fetch("/create-directory", {
              method: "POST",
              body: new URLSearchParams({
                dirName: dirName,
                subdir: `<%= currentDir %>`,
              }),
            })
              .then((response) => {
                if (response.ok) {
                  Swal.fire({
                    title: "Success!",
                    text: `Directory "${dirName}" created successfully!`,
                    icon: "success",
                    confirmButtonText: "OK",
                  }).then(() => window.location.reload());
                } else {
                  Swal.fire({
                    title: "Error!",
                    text: "An error occurred while creating the directory.",
                    icon: "error",
                    confirmButtonText: "OK",
                  });
                }
              })
              .catch((error) => {
                Swal.fire({
                  title: "Error!",
                  text: "An error occurred during the request.",
                  icon: "error",
                  confirmButtonText: "OK",
                });
              });
          }
        });
      });

      const dropArea = document.querySelector(".drop_box"),
        button = dropArea.querySelector("button"),
        input = dropArea.querySelector("input"),
        form = document.getElementById("uploadForm");
      const dir = `<%= currentDir %>`;

      button.onclick = () => {
        input.click();
      };

      input.addEventListener("change", function (e) {
        if (e.target.files.length > 0) {
          const file = e.target.files[0];
          const formData = new FormData();
          formData.append("file", file);
          formData.append("dir", dir);
          fetch("/upload", {
            method: "POST",
            body: formData,
          })
            .then((data) => {
              window.location.reload();
            })
            .catch((error) => console.error(error));
        }
      });
    </script>
  </body>
</html>
